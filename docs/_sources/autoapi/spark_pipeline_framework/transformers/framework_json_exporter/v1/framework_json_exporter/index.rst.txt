:mod:`spark_pipeline_framework.transformers.framework_json_exporter.v1.framework_json_exporter`
===============================================================================================

.. py:module:: spark_pipeline_framework.transformers.framework_json_exporter.v1.framework_json_exporter


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_pipeline_framework.transformers.framework_json_exporter.v1.framework_json_exporter.FrameworkJsonExporter



.. class:: FrameworkJsonExporter(file_path: Union[(Path, str)], view: Optional[str] = None, name: Optional[str] = None, parameters: Optional[Dict[str, Any]] = None, progress_logger: Optional[ProgressLogger] = None, limit: int = -1)


   Bases: :class:`spark_pipeline_framework.transformers.framework_transformer.v1.framework_transformer.FrameworkTransformer`

   Abstract class for transformers that transform one dataset into another.

   .. versionadded:: 1.3.0

   .. method:: setParams(self, file_path: Union[(Path, str)], view: Optional[str] = None, name: Optional[str] = None, parameters: Optional[Dict[str, Any]] = None, progress_logger: Optional[ProgressLogger] = None, limit: int = -1) -> Any


   .. method:: _transform(self, df: pyspark.sql.dataframe.DataFrame) -> pyspark.sql.dataframe.DataFrame

      Transforms the input dataset.

      :param dataset: input dataset, which is an instance of :py:class:`pyspark.sql.DataFrame`
      :returns: transformed dataset


   .. method:: setView(self, value: str) -> spark_pipeline_framework.transformers.framework_json_exporter.v1.framework_json_exporter.FrameworkJsonExporter


   .. method:: getView(self) -> Optional[str]


   .. method:: setFilePath(self, value: Union[(Path, str)]) -> spark_pipeline_framework.transformers.framework_json_exporter.v1.framework_json_exporter.FrameworkJsonExporter


   .. method:: getFilePath(self) -> Union[(Path, str)]


   .. method:: setLimit(self, value: int) -> spark_pipeline_framework.transformers.framework_json_exporter.v1.framework_json_exporter.FrameworkJsonExporter


   .. method:: getLimit(self) -> int


   .. method:: getName(self) -> Optional[str]



