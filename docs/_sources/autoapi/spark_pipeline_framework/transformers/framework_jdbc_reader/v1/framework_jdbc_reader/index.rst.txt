:mod:`spark_pipeline_framework.transformers.framework_jdbc_reader.v1.framework_jdbc_reader`
===========================================================================================

.. py:module:: spark_pipeline_framework.transformers.framework_jdbc_reader.v1.framework_jdbc_reader


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_pipeline_framework.transformers.framework_jdbc_reader.v1.framework_jdbc_reader.FrameworkJdbcReader



.. class:: FrameworkJdbcReader(jdbc_url: str, query: str, driver: str, view: Optional[str] = None, name: Optional[str] = None, parameters: Optional[Dict[str, Any]] = None, progress_logger: Optional[ProgressLogger] = None)


   Bases: :class:`spark_pipeline_framework.transformers.framework_transformer.v1.framework_transformer.FrameworkTransformer`

   Abstract class for transformers that transform one dataset into another.

   .. versionadded:: 1.3.0

   .. method:: setParams(self, jdbc_url: str, query: str, driver: str, view: Optional[str] = None, name: Optional[str] = None, parameters: Optional[Dict[str, Any]] = None, progress_logger: Optional[ProgressLogger] = None) -> Any


   .. method:: _transform(self, df: pyspark.sql.dataframe.DataFrame) -> pyspark.sql.dataframe.DataFrame

      Transforms the input dataset.

      :param dataset: input dataset, which is an instance of :py:class:`pyspark.sql.DataFrame`
      :returns: transformed dataset


   .. method:: getJdbcUrl(self) -> str


   .. method:: getDriver(self) -> str


   .. method:: getFormat(self) -> str


   .. method:: getQuery(self) -> str


   .. method:: getView(self) -> Optional[str]



