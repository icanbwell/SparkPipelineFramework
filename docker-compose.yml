version: '3.5'
services:
  dev:
    user: root
    build:
      dockerfile: spark.Dockerfile
      context: .
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_DEFAULT_REGION
      - AWS_SECRET_ACCESS_KEY
      - AWS_SECURITY_TOKEN
      - AWS_SESSION_TOKEN
    volumes:
      - ./:/SparkpipelineFramework/
    container_name: spf_dev
    working_dir: /SparkpipelineFramework

  spark:
    user: root
    image: sparkpipelineframework_dev:latest
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'
      - '7077:7077'
      - '4040:4040'
    restart: always
    healthcheck:
        test: ["CMD-SHELL", "/opt/bitnami/spark/bin/spark-submit --master spark://spark:7077 /opt/bitnami/spark/examples/src/main/python/pi.py 10"]
        timeout: 300s
        retries: 5
        start_period: 60s

  warehouse:
    image: mysql:8.0.30
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: fhir_rpt
    ports:
      - '33061:3306'
    command: --sql-mode="STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]

  mlflow:
    image: imranq2/mlflow_server:0.1.9
    ports:
      - '5050:5000'
    volumes:
      - ./mlflow_artifacts/:/opt/project/mlflow_artifacts/
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri mysql+pymysql://root:root_password@warehouse:3306/fhir_rpt --default-artifact-root ./opt/project/mlflow_artifacts

  mock-server:
    image: mockserver/mockserver:mockserver-5.14.0
    command: -serverPort 1080
    ports:
      - '1080:1080'
    environment:
      - MOCKSERVER_LIVENESS_HTTP_GET_PATH=/health

  fhir:
    depends_on:
      - mongo
    image: imranq2/node-fhir-server-mongo:2.1.219
    # To use local fhir code, comment above line and uncomment below
#    build:
#      dockerfile: Dockerfile
#      context: ../node-fhir-server-mongo
    environment:
      SERVER_PORT: 3000
      MONGO_DB_NAME: fhir
      MONGO_URL: mongodb://mongo:27017
      AUDIT_EVENT_MONGO_DB_NAME: fhir
      AUDIT_EVENT_MONGO_URL: mongodb://mongo:27017
      RESOURCE_SERVER: http://fhir:3000/
      AUTH_SERVER_URI: http://myauthzserver.com
      CLIENT_ID: client
      CLIENT_SECRET: secret
      INTROSPECTION_URL: https://myauthzserver.com/introspect
      CHECK_ACCESS_TAG_ON_SAVE: 1
      IS_PRODUCTION: ""
      RETURN_BUNDLE: "1"
      VALIDATE_SCHEMA: "1"
      AUTH_ENABLED: "0"
      ENABLE_GRAPHQL: "1"
      LOGLEVEL: "DEBUG"
      SET_INDEX_HINTS: 0
      CREATE_INDEX_ON_COLLECTION_CREATION: 1
      USE_TWO_STEP_SEARCH_OPTIMIZATION: "0"
      STREAM_RESPONSE: "1"
      LOG_STREAM_STEPS: "0"
      PARTITION_RESOURCES: 'AuditEvent'
      COLLECTIONS_ACCESS_INDEX: "all"
      USE_ACCESS_INDEX: 1
    ports:
      - '3000:3000'
    command: yarn start
    healthcheck:
        test: ["CMD-SHELL", "curl --silent --fail localhost:3000/health || exit 1"]

  mongo:
#    image: docker.io/bitnami/mongodb:4.4.9
    image: mongo:5.0.13
    ports:
      - '27017:27017'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet

volumes:
  mysql_data:
    labels:
      - "mlflow"
  mongo_data:
