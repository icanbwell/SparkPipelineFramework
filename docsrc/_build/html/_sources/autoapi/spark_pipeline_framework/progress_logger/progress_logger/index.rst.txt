:mod:`spark_pipeline_framework.progress_logger.progress_logger`
===============================================================

.. py:module:: spark_pipeline_framework.progress_logger.progress_logger


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_pipeline_framework.progress_logger.progress_logger.ProgressLogger



.. class:: ProgressLogger(event_loggers: Optional[List[EventLogger]] = None)


   .. method:: __enter__(self) -> spark_pipeline_framework.progress_logger.progress_logger.ProgressLogger


   .. method:: __exit__(self, exc_type: Optional[BaseException], exc_value: Optional[BaseException], traceback: Optional[TracebackType]) -> None


   .. method:: log_metric(self, name: str, time_diff_in_minutes: float) -> None


   .. method:: log_artifact(self, key: str, contents: str, folder_path: Optional[str] = None) -> None


   .. method:: write_to_log(self, name: str, message: str = '') -> bool


   .. method:: log_exception(self, event_name: str, event_text: str, ex: Exception) -> None


   .. method:: log_progress_event(self, event_name: str, current: int, total: int, event_format_string: str, backoff: bool = True) -> None


   .. method:: log_event(self, event_name: str, event_text: str) -> None



