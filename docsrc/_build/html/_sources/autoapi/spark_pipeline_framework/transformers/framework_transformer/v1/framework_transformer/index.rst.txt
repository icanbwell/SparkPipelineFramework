:py:mod:`spark_pipeline_framework.transformers.framework_transformer.v1.framework_transformer`
==============================================================================================

.. py:module:: spark_pipeline_framework.transformers.framework_transformer.v1.framework_transformer


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_pipeline_framework.transformers.framework_transformer.v1.framework_transformer.FrameworkTransformer




.. py:class:: FrameworkTransformer(name: Optional[str] = None, parameters: Optional[Dict[str, Any]] = None, progress_logger: Optional[spark_pipeline_framework.progress_logger.progress_logger.ProgressLogger] = None)

   Bases: :py:obj:`pyspark.ml.base.Transformer`, :py:obj:`pyspark.ml.util.DefaultParamsReadable`, :py:obj:`pyspark.ml.util.DefaultParamsWritable`

   Abstract class for transformers that transform one dataset into another.

   .. versionadded:: 1.3.0

   .. py:method:: setStandardParams(self, name: Optional[str] = None, parameters: Optional[Dict[str, Any]] = None, progress_logger: Optional[spark_pipeline_framework.progress_logger.progress_logger.ProgressLogger] = None) -> Any


   .. py:method:: setParams(self, **kwargs: Any) -> Any


   .. py:method:: _transform(self, df: pyspark.sql.dataframe.DataFrame) -> pyspark.sql.dataframe.DataFrame

      Transforms the input dataset.

      Parameters
      ----------
      dataset : :py:class:`pyspark.sql.DataFrame`
          input dataset.

      Returns
      -------
      :py:class:`pyspark.sql.DataFrame`
          transformed dataset


   .. py:method:: transformers(self) -> List[pyspark.ml.base.Transformer]
      :property:


   .. py:method:: getName(self) -> Optional[str]


   .. py:method:: getProgressLogger(self) -> Optional[spark_pipeline_framework.progress_logger.progress_logger.ProgressLogger]


   .. py:method:: getParameters(self) -> Optional[Dict[str, Any]]


   .. py:method:: getSql(self) -> Optional[str]


   .. py:method:: _setDefault(self, **kwargs: Any) -> None

      Sets default params.


   .. py:method:: _set(self, **kwargs: Any) -> None

      Sets user-supplied params.


   .. py:method:: __str__(self) -> str

      Return str(self).



