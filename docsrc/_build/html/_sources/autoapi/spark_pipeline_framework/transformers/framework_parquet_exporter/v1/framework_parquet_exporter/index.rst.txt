:py:mod:`spark_pipeline_framework.transformers.framework_parquet_exporter.v1.framework_parquet_exporter`
========================================================================================================

.. py:module:: spark_pipeline_framework.transformers.framework_parquet_exporter.v1.framework_parquet_exporter


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_pipeline_framework.transformers.framework_parquet_exporter.v1.framework_parquet_exporter.FrameworkParquetExporter




.. py:class:: FrameworkParquetExporter(file_path: Union[str, pathlib.Path], view: Optional[str] = None, name: Optional[str] = None, mode: str = FileWriteModes.MODE_ERROR, parameters: Optional[Dict[str, Any]] = None, progress_logger: Optional[spark_pipeline_framework.progress_logger.progress_logger.ProgressLogger] = None, limit: int = -1)

   Bases: :py:obj:`spark_pipeline_framework.transformers.framework_base_exporter.v1.framework_base_exporter.FrameworkBaseExporter`

   Abstract class for transformers that transform one dataset into another.

   .. versionadded:: 1.3.0

   .. py:method:: getFilePath(self) -> Union[str, pathlib.Path]


   .. py:method:: getFormat(self) -> str


   .. py:method:: getOptions(self) -> Dict[str, Any]



