:py:mod:`spark_pipeline_framework.transformers.framework_file_downloader.v1.framework_file_downloader`
======================================================================================================

.. py:module:: spark_pipeline_framework.transformers.framework_file_downloader.v1.framework_file_downloader


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_pipeline_framework.transformers.framework_file_downloader.v1.framework_file_downloader.FrameworkFileDownloader




.. py:class:: FrameworkFileDownloader(download_urls: Optional[List[str]] = [], download_to_path: Optional[str] = './', param_key: Optional[str] = 'urls', name: Optional[str] = None, parameters: Optional[Dict[str, Any]] = None, progress_logger: Optional[spark_pipeline_framework.progress_logger.progress_logger.ProgressLogger] = None, extract_zips: Optional[bool] = False)

   Bases: :py:obj:`spark_pipeline_framework.transformers.framework_param_transformer.v1.framework_param_transformer.FrameworkParamTransformer`

   .. py:method:: _transform(self, df: pyspark.sql.DataFrame, response: Dict[str, Any]) -> Dict[str, Any]


   .. py:method:: getParamKey(self) -> str


   .. py:method:: getDownloadUrls(self) -> str


   .. py:method:: getDownloadToPath(self) -> Optional[str]


   .. py:method:: getExtractZips(self) -> bool



